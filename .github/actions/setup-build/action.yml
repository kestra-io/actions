name: 'Setup build'
description: 'Composite action to setup build and caches'
inputs:
  java-enabled:
    description: "Specify whether to setup Java"
    default: 'false'
    required: true
  java-version:
    description: "Java version"
    default: '21'
    required: true
  java-distribution:
    description: "Java distribution"
    default: 'temurin'
    required: true
  node-enabled:
    description: "Specify whether to setup Node"
    default: 'false'
    required: true
  node-version:
    description: "Node version"
    default: '18'
    required: true
  python-enabled:
    description: "Specify whether to setup Python"
    default: 'false'
    required: true
  python-version:
    description: "Python version"
    default: '3.x'
    required: true

runs:
  using: composite
  steps:
    # Setup Java
    - name: Java - Setup
      uses: actions/setup-java@v4
      if: inputs.java-enabled == 'true'
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}

    - name: Java - Setup gradle
      if: inputs.java-enabled == 'true'
      uses: gradle/actions/setup-gradle@v4

    - name: Java - SonarCloud cache
      if: inputs.java-enabled == 'true'
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    # Setup Python
    - name: Python - Setup
      uses: actions/setup-python@v5
      if: inputs.python-enabled == 'true'
      with:
        python-version: ${{ inputs.python-version }}
        architecture: 'x64'

    - name: Python - Install virtualenv
      if: inputs.python-enabled == 'true'
      shell: bash
      run: python3 -m pip install virtualenv

    # Setup Node
    - name: Node - Setup
      uses: actions/setup-node@v4
      if: inputs.node-enabled == 'true'
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

