name: 'Setup build'
description: 'Composite action to setup build and caches'
inputs:
  java-enabled:
    description: "Specify whether to setup Java"
    default: 'false'
    required: true
  java-version:
    description: "Java version"
    default: '21'
    required: true
  java-distribution:
    description: "Java distribution"
    default: 'temurin'
    required: true
  node-enabled:
    description: "Specify whether to setup Node"
    default: 'false'
    required: true
  node-version:
    description: "Node version"
    default: '18'
    required: true
  python-enabled:
    description: "Specify whether to setup Python"
    default: 'false'
    required: true
  python-version:
    description: "Python version"
    default: '3.x'
    required: true
  caches-enabled:
    description: "Specify whether to setup caches"
    default: 'false'
    required: true
runs:
  using: composite
  steps:
    # Setup JDK
    - name: Set up JDK
      uses: actions/setup-java@v4
      if: inputs.java-enabled == 'true'
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}

    # Setup Python
    - uses: actions/setup-python@v5
      if: inputs.python-enabled == 'true'
      with:
        python-version: ${{ inputs.python-version }}
        architecture: 'x64'

    - name: Install virtualenv
      if: inputs.python-enabled == 'true'
      shell: bash
      run: python3 -m pip install virtualenv

    # Setup Node
    - uses: actions/setup-node@v4
      if: inputs.node-enabled == 'true'
      with:
        node-version: ${{ inputs.node-version }}
        check-latest: true

    # Caches for Java
    - name: SonarCloud cache
      if: inputs.caches-enabled == 'true' && inputs.java-enabled == 'true'
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    # Caches for Node/Npm
    - name: Npm cache
      uses: actions/cache@v4
      if: inputs.caches-enabled == 'true' && inputs.node-enabled == 'true'
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Node cache
      uses: actions/cache@v4
      if: inputs.caches-enabled == 'true' && inputs.node-enabled == 'true'
      with:
        path: node
        key: ${{ runner.os }}-node-${{ hashFiles('ui/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Setup Gradle
    - name: Validate Gradle wrapper
      if: inputs.java-enabled == 'true'
      uses: gradle/actions/setup-gradle@v4

    - name: Generate and submit gradle dependency graph
      if: inputs.java-enabled == 'true' && github.repository_owner == 'kestra-io'
      uses: gradle/actions/dependency-submission@v4
