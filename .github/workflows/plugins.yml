name: Main

on:
  workflow_call:
    inputs:
      skip-test:
        description: "Does we need to skip test"
        required: true
        type: boolean
      sonatype-publish:
        description: "Does we use gradle publish or sonatype publish"
        required: false
        type: boolean
        default: true
      runner:
        description: "The runner to use."
        required: false
        type: string
        default: "ubuntu-latest"
      shadowJar:
        description: "Does we generate a shadowJar"
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  checks: write
  actions: read
  pull-requests: write
  packages: read

jobs:
  main:
    runs-on: ${{ inputs.runner }}
    steps:
      # Check out
      - name: Checkout - Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # Checkout GitHub Actions
      - name: Checkout - Actions
        uses: actions/checkout@v4
        with:
          repository: kestra-io/actions
          sparse-checkout-cone-mode: true
          path: .actions
          ref: "feat/plugin-actions" # TODO: change to main
          sparse-checkout: |
            composite
            actions

      - name: Checkout - Actions Move
        run: |
          mv .actions/composite composite
          mv .actions/actions actions 

      # Setup build
      - name: Setup - Build
        uses: ./composite/setup-build
        id: build
        with:
          java-enabled: true

      # Setup for unit test
      - name: Setup - Secret to Env
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      # Auth to google with github are required for com.google.cloud.artifactregistry.gradle-plugin
      - name: GCP - Auth with github service account
        uses: 'google-github-actions/auth@v2'
        if: ${{ inputs.sonatype-publish == false }}
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup - Unit test
        if: ${{ inputs.skip-test == false }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          if [ -f .github/setup-unit.sh ]; then
            ./.github/setup-unit.sh 
          fi

      # Gradle check
      - name: Test - Gradle Check
        if: ${{ inputs.skip-test == false }}
        shell: bash
        run: ./gradlew check ${{ inputs.shadowJar == true && 'shadowJar' || ''  }} --parallel
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Publish
      - name: Publish - Java
        uses: ./composite/publish-java
        with:
          secrets: ${{ toJSON(secrets) }}
          is-private: ${{ inputs.sonatype-publish == false }}

      # Upload plugins as artifacts
      - name: Artifacts - Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: "**/build/libs/*.jar"
          retention-days: 7

      # Trivy scan
      - name: Trivy
        id: trivy
        if: inputs.shadowJar == true
        uses: ./composite/scan-trivy

      # GitHub Release
      - name: Create GitHub release
        uses: ./composite/github-release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_RELEASES_WEBHOOK_URL: ${{ secrets.SLACK_RELEASES_WEBHOOK_URL }}

      # Report Java
      - name: Report - Java
        uses: ./composite/report-java
        if: ${{ !cancelled() && inputs.skip-test == false }}
        with:
          secrets: ${{ toJSON(secrets) }}
          skip-test: ${{ inputs.skip-test }}

      # Comment PR with artifacts & Trivy results
      - name: Artifacts - Comment pull request
        uses: ./actions/comment-update
        if: ${{ always() && (github.event_name == 'pull_request' && github.repository == github.event.pull_request.head.repo.full_name) }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: "Super title"
          template: |
            ## Artifacts
            | Name | Size | Updated | Expiration |
            | :--- | :--- | :--- | :--- |
            {{#each artifacts }}
            | [![{{ name }}](https://img.shields.io/badge/Download%20{{ name }}-8405FF?style=for-the-badge)]({{ download_url }}) | {{ prettySize size_in_bytes }} | {{ prettyDate updated_at }} | {{ prettyDate expires_at }} |
            {{/each }}
            
            ${{ steps.trivy.outputs.result }}


      # Slack on error
      - name: Slack - Notify failed CI
        id: send-ci-failed
        if: always() && env.SLACK_WEBHOOK_URL != '' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && job.status == 'failure'
        uses: ./composite/send-ci-failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
