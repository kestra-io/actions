name: Main

on:
  workflow_call:
    inputs:
      skip-test:
        description: "Does we need to skip test"
        required: true
        type: boolean
      sonatype-publish:
        description: "Does we use gradle publish or sonatype publish"
        required: false
        type: boolean
        default: true
      runner:
        description: "The runner to use."
        required: false
        type: string
        default: "ubuntu-latest"
      generate-shadowjar:
        description: "Does we generate a shadow jar"
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  checks: write
  actions: read
  pull-requests: write
  packages: read

jobs:
  main:
    runs-on: ${{ inputs.runner }}
    steps:
      # Check out
      - name: Checkout - Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # Checkout GitHub Actions
      - name: Checkout - Actions
        uses: actions/checkout@v4
        with:
          repository: kestra-io/actions
          sparse-checkout-cone-mode: true
          path: .actions
          sparse-checkout: |
            composite
            actions

      - name: Checkout - Actions Move
        run: |
          mv .actions/composite composite
          mv .actions/actions actions 

      # Setup build
      - name: Setup - Build
        uses: ./composite/setup-build
        with:
          java-enabled: true

      # Setup for setup-unit.sh, injecting secrets as env variables
      - name: Setup - Secret to Env
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      # Auth to google with github are required for com.google.cloud.artifactregistry.gradle-plugin
      - name: GCP - Auth with github service account
        uses: 'google-github-actions/auth@v3'
        if: ${{ inputs.sonatype-publish == false }}
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Setup unit tests environment
      - name: Setup - Unit test
        if: ${{ inputs.skip-test == false }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          if [ -f .github/setup-unit.sh ]; then
            ./.github/setup-unit.sh 
          fi

      # Gradle check
      - name: Test - Gradle Check
        if: ${{ inputs.skip-test == false }}
        shell: bash
        run: ./gradlew check ${{ inputs.generate-shadowjar == true && 'shadowJar' || ''  }} --parallel
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Cleanup unit tests environment
      - name: Cleanup - Unit test
        if: ${{ inputs.skip-test == false }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          if [ -f .github/cleanup-unit.sh ]; then
            ./.github/cleanup-unit.sh
          fi

      # Publish
      - name: Publish - Java
        uses: ./composite/publish-java
        if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && startsWith(github.repository, 'kestra-io/') }}
        with:
          secrets: ${{ toJSON(secrets) }}
          is-private: ${{ inputs.sonatype-publish == false }}

      # Upload
      - name: Publish - Jar artifacts
        uses: ./composite/jar-upload
        if: ${{ inputs.generate-shadowjar == true && github.event_name == 'pull_request' && startsWith(github.repository, 'kestra-io/') }}
        with:
          secrets: ${{ toJSON(secrets) }}

      # Trivy scan
      - name: Trivy - Scan jar
        if: ${{ inputs.generate-shadowjar == true && github.event_name == 'pull_request' && startsWith(github.repository, 'kestra-io/') }}
        uses: ./composite/scan-trivy
        with:
          secrets: ${{ toJSON(secrets) }}

      # GitHub Release
      - name: GitHub - Create release
        uses: ./composite/github-release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_RELEASES_WEBHOOK_URL: ${{ secrets.SLACK_RELEASES_WEBHOOK_URL }}

      # Report Java
      - name: Report - Java
        uses: ./composite/report-java
        if: ${{ !cancelled() && inputs.skip-test == false }}
        with:
          secrets: ${{ toJSON(secrets) }}

      # Slack on error
      - name: Slack - Notify on failure
        id: send-ci-failed
        if: always() && env.SLACK_WEBHOOK_URL != '' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && job.status == 'failure'
        uses: ./composite/slack-status
        with:
          channel: "C09FE0QCN2E"
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      # Index release
      - name: Index release
        uses: kestra-io/actions/composite/plugin-release-index@main
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          webhookUrl: "${{ secrets.KESTRA_WEBHOOK_URL_PLUGIN_RELEASE_INDEX }}"
