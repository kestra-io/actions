name: Pull Request - Publish Docker

on:
  workflow_call:

jobs:
  build-artifacts:
    name: Build Artifacts
    if: github.event.pull_request.head.repo.full_name == github.repository # prevent running on forks
    uses: ./.github/workflows/kestra-oss-build-artifacts.yml

  publish:
    name: Publish Docker
    if: github.event.pull_request.head.repo.full_name == github.repository # prevent running on forks
    runs-on: ubuntu-latest
    needs: build-artifacts
    env:
      GITHUB_IMAGE_PATH: "ghcr.io/kestra-io/kestra-pr"
    steps:
      - name: Checkout - Current ref
        uses: actions/checkout@v5
        with:
          fetch-depth: 0


      - name: Docker init
        uses: kestra-io/actions/composite/setup-docker@main

      # Docker Login
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build Docker Image
      - name: Artifacts - Download executable
        uses: actions/download-artifact@v5
        with:
          name: exe
          path: build/executable

      - name: Docker - Copy exe to image
        shell: bash
        run: |
          cp build/executable/* docker/app/kestra && chmod +x docker/app/kestra

      - name: Docker - Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.pr
          push: true
          tags: ${{ env.GITHUB_IMAGE_PATH }}:${{ github.event.pull_request.number }}
          platforms: linux/amd64,linux/arm64

      # Add comment on pull request
      - name: Add comment to PR
        uses: kestra-io/actions/actions/comment-update@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: "üêã Docker image"
          template: |
            ```
              ${{ env.GITHUB_IMAGE_PATH }}:${{ github.event.pull_request.number }}`
            ```

            ```bash
              docker run --pull=always --rm -it -p 8080:8080 --user=root -v /var/run/docker.sock:/var/run/docker.sock -v /tmp:/tmp ${{ env.GITHUB_IMAGE_PATH }}:${{ github.event.pull_request.number }} server local
            ```
